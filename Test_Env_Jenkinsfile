pipeline {

	agent any

	environment {
	DOCKERHUB_CREDENTIALS = credentials('ericfontes-docker-hub') 
	}
		
	stages {

	  stage('Tooling versions') {

	    steps{
	      sh '''
	        docker --version
		docker compose version
		'''
		}
          }


	  stage('Build') {

	    steps {
	      sh 'docker context use default'
	      sh 'docker compose build'
	      sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
	      sh 'docker compose push'
              sh 'docker compose ps'
	       }
	  }

         stage('SonarCloud') {
	    def scannerHome = tool 'SonarScanner 4.0';
	    steps {
               withSonarQubeEnv('SonarCloud') { // If you have configured more than one global server connection, you can specify its name
                 sh "${scannerHome}/bin/sonar-scanner"
                }
          }
    }
	  
	  stage('Deploy approval'){
	    steps {
              input(message: 'Press Aprove to deploy', ok: 'Aprove')
    }
 }

/**
	  stage('Deploy') {
	    
	    steps {
              sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
	      sh 'docker context use default'
	      sh 'docker compose up'
	      sh 'docker compose ps --format json'
	      }
	  }
**/
     }
 }
